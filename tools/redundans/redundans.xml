<tool id="redundans" name="Redundans" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
    <description>assembly of heterozygous genomes</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
            #if $short_reads.selector == 'enabled'
                #set $sreads = '" "'.join( [ str( $x ) for $x in $short_reads.fastq ] )
            #end if

            pwd &&
            python /root/src/redundans/redundans.py
            --fasta '$fasta'
            #if $short_reads.selector == 'enabled'
                --fastq #echo $sreads
            #end if
            #if $longreads
                --longreads #echo " ".join('${longreads}')
            #end if
            $log
            --threads \${GALAXY_SLOTS:-4}
            $nogapclosing
            #if str( $short_reads.selector ) == "disabled":
                --noscaffolding
            #elif str( $short_reads.selector ) == "enabled":
                --fastq '$short_reads.fastq'
                --joins $short_reads.joins
                --linkratio $short_reads.linkratio
                --limit $short_reads.limit
                --mapq $short_reads.mapq
                --iters $short_reads.iters
            #end if
            #if str( $reference_file.selector ) == "enabled":
                --reference '$reference_file.reference'
                $reference_file.norearrangements
            #end if
            #if str( $reduction_options.selector ) == "disabled":
                --noreduction
            #elif str( $reduction_options.selector ) == "enabled":
                --identity $reduction_options.identity
                --overlap $reduction_options.overlap
                --minLength $reduction_options.minLength
            #end if

    ]]></command>
    <inputs>
        <param argument="--fasta" type="data" format="fasta" label="FASTA file with contigs/scaffolds" help="MP or PE reads" />
        <conditional name="short_reads">
            <param name="selector" type="select" label="Short-read scaffolding">
                <option value="disabled">Disabled</option>
                <option value="enabled">Enabled</option>
            </param>
            <when value="disabled"/>
            <when value="enabled">
                <param argument="--fastq" type="data" format="fastq,fastq.gz,fastqsanger,fastqsanger.gz" multiple="true" label="FASTQ Illumina short reads"
                    help="FASTQ file(s) with short-reads for performing short-read scaffolding"/>
                <param argument="--joins" type="integer" min="1" value="5" label="Joins" help="Min pairs to join contigs" />
                <param argument="--linkratio" type="float" min="0" max="1" value="0.7" label="Link ratio" help="Max link ratio between two best contig pairs" />
                <param argument="--limit" type="float" min="0" max="1" value="0.2" label="Limit" help="Align subset of reads" />
                <param argument="--mapq" type="integer" min="0" value="10" label="Min mapping quality"/>
                <param argument="--iters" type="integer" min="1" value="2" label="Iterations" help="Iterations per library" />
            </when>
        </conditional>
        <param argument="--longreads" type="data" format="fastq,fastq.gz,fastqsanger,fastqsanger.gz" multiple="true" optional="true" label="FASTQ long reads"
            help="FASTQ file(s) with long-reads for performing long-read scaffolding"/>
        <conditional name="reference_file">
            <param name="selector" type="select" label="Reference-based scaffolding">
                <option value="disabled">Disabled</option>
                <option value="enabled">Enabled</option>
            </param>
            <when value="disabled"/>
            <when value="enabled">
                <param argument="--reference" type="data" format="fasta" label="Reference file" help="Reference FASTA file for performing reference-based scaffolding" />
                <param argument="--norearrangements" type="boolean" truevalue="--norearrangements" falsevalue="" checked="false" label="Hight identity mode" help="Rearragements not allowed" />
            </when>
        </conditional>
        <conditional name="reduction_options">
            <param name="selector" type="select" label="Reduction step">
                <option value="disabled">Disabled</option>
                <option value="enabled" selected="true">Enabled</option>
            </param>
            <when value="disabled"/>
            <when value="enabled">
                <param argument="--identity" type="float" min="0" max="1" value="0.51" label="Identity" help="Minimum identity" />
                <param argument="--overlap" type="float" min="0" max="1" value="0.8" label="Overlap" help="Minimum overlap" />
                <param argument="--minLength" type="integer" min="0" value="200" label="MinLength" help="Minimum contig length" />
            </when>
        </conditional>
        <param argument="--nogapclosing" type="boolean" truevalue="" falsevalue="--nogapclosing" checked="false" label="No gap closing"/>
        <param argument="--log" type="boolean" truevalue="--log logfile.txt" falsevalue="" checked="false" label="Generate log output"/>
    </inputs>
    <outputs>
        <data name="contigs" format="fasta" from_work_dir="contigs.fa" label="${tool.name} on ${on_string}: contigs"/>
        <data name="contigs_reduced" format="fasta" from_work_dir="contigs.reduced.fa" label="${tool.name} on ${on_string}: contigs reduced"> 
            <filter>reduction_options['selector'] == 'enabled'</filter>
        </data>
        <data name="scaffolds" format="fasta" from_work_dir="scaffolds.fa" label="${tool.name} on ${on_string}: scaffolds"/>
        <data name="scaffolds_filled" format="fasta" from_work_dir="scaffolds.fa" label="${tool.name} on ${on_string}: scaffolds">
            <filter>nogapclosing == 'false'</filter>
        </data>
        <data name="scaffolds_reduced" format="fasta" from_work_dir="scaffolds.fa" label="${tool.name} on ${on_string}: scaffolds">
            <filter>reduction_options['selector'] == 'enabled'</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="5">
            <param name="fasta" value="contigs.fa"/>
            <param name="nogapclosing" value="false"/>
            <conditional name="short_reads">
                <param name="selector" value="enabled"/>
                <param name="fastq" value="5000_1.fq.gz,5000_2.fq.gz"/>
            </conditional>
            <output name="contigs" file="test01_contigs.fa" ftype="fasta"/>
            <output name="contigs_reduced" file="contigs_reduced.fasta" ftype="fasta"/>
            <output name="scaffolds" file="scaffolds.fa" ftype="fasta"/>
            <output name="scaffolds_filled" file="scaffolds_filled.fasta" ftype="fasta"/>
            <output name="scaffolds_reduced" file="scaffolds_reduced.fasta" ftype="fasta"/>
        </test>
    </tests>
    <help><![CDATA[


.. class:: infomark

**Purpose**

Redundans pipeline assists an assembly of heterozygous genomes. Program takes as input assembled contigs, sequencing libraries and/or reference sequence and returns scaffolded 
homozygous genome assembly. Final assembly should be less fragmented and with total size smaller than the input contigs. In addition, Redundans will automatically close the gaps 
resulting from genome assembly or scaffolding.

    ]]></help>
    <expand macro="citations" />
</tool>